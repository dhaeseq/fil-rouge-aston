---

# ADD DOCKER GPG KEY
- name: Get and add docker gpg-key
  apt_key:
    url: https://download.docker.com/linux/ubuntu/gpg
    state: present
  become: yes
  when: inventory_hostname != "localhost"
  tags:
    - addDockerGpgKey
    - freshInstallDocker

# ADD REPO DOCKER
- name: Add repository docker
  apt_repository:
    repo: deb [arch=amd64] https://download.docker.com/linux/ubuntu focal stable
    state: present
    update_cache: true
  become: yes
  when: inventory_hostname != "localhost"
  tags:
    - addDockerRepo
    - freshInstallDocker

# INSTALL DOCKER
- name: Install docker
  apt:
    name:
      - docker-ce
      - docker-ce-cli
      - containerd.io
    state: present
  become: yes
  when: inventory_hostname != "localhost"
  tags:
    - installDocker
    - freshInstallDocker

# INSTALL DOCKER-COMPOSE
- name: Install docker-compose
  get_url:
    url : https://github.com/docker/compose/releases/download/1.29.1/docker-compose-Linux-x86_64
    dest: /usr/local/bin/docker-compose
    mode: 'u+x,g+x'
  become: yes
  when: inventory_hostname != "localhost"
  tags:
    - installDockerCompose
    - freshInstallDocker

# INSTALL PYTHON3
- name: Install python3
  apt:
    name:
      - python3
      - python3-pip
  when: inventory_hostname != "localhost"
  become: yes
  tags:
    - installDockerModules
    - freshInstallDocker

# INSTALL PYTHON3 DOCKER MODULES
- name: Install docker module with python
  pip:
    name:
      - docker
    executable: pip3
  when: inventory_hostname != "localhost"
  tags:
    - installDockerModule
    - freshInstallDocker

# INSTALL PYTHON3 DOCKER-COMPOSE MODULES
- name: Install docker-compose module with python
  pip:
    name:
      - docker-compose
    executable: pip3
  when: inventory_hostname != "localhost"
  tags:
    - installDockerComposeModule
    - freshInstallDocker

# ADD DOCKER GROUP TO USER
- name: add docker group to user
  user:
    name: "{{ ansible_ssh_user }}"
    groups: docker
    append: yes
  become: yes
  when: inventory_hostname != "localhost"
  tags:
    - addGroupDockerToUser
    - freshInstallDocker

# RESET CONNECTION FOR PIPELINING
- name: reset ssh connection
  meta: reset_connection
  tags:
    - freshInstallDocker

# LOG IN DOCKERHUB
- name: log into docker hub registry
  docker_login:
    username: "{{ dockerhub_username }}"
    password: "{{ dockerhub_password }}"
    reauthorize: yes
  tags:
    - loginDockerhub
    - freshInstallDocker